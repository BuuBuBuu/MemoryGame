// Generated by view binder compiler. Do not edit!
package com.example.memorygamedec22.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.memorygamedec22.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLeaderboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout adContainer;

  @NonNull
  public final ImageView adImageView;

  @NonNull
  public final ProgressBar adProgressBar;

  @NonNull
  public final ImageButton btnFetch;

  @NonNull
  public final ImageButton btnLeft;

  @NonNull
  public final MaterialButton btnLoginLogout;

  @NonNull
  public final MaterialButton btnRetry;

  @NonNull
  public final LinearLayout errorLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvLeaderboard;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final ConstraintLayout topBar;

  @NonNull
  public final TextView tvEmptyState;

  @NonNull
  public final TextView tvError;

  @NonNull
  public final TextView tvWelcome;

  private ActivityLeaderboardBinding(@NonNull LinearLayout rootView,
      @NonNull FrameLayout adContainer, @NonNull ImageView adImageView,
      @NonNull ProgressBar adProgressBar, @NonNull ImageButton btnFetch,
      @NonNull ImageButton btnLeft, @NonNull MaterialButton btnLoginLogout,
      @NonNull MaterialButton btnRetry, @NonNull LinearLayout errorLayout,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView rvLeaderboard,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull ConstraintLayout topBar,
      @NonNull TextView tvEmptyState, @NonNull TextView tvError, @NonNull TextView tvWelcome) {
    this.rootView = rootView;
    this.adContainer = adContainer;
    this.adImageView = adImageView;
    this.adProgressBar = adProgressBar;
    this.btnFetch = btnFetch;
    this.btnLeft = btnLeft;
    this.btnLoginLogout = btnLoginLogout;
    this.btnRetry = btnRetry;
    this.errorLayout = errorLayout;
    this.progressBar = progressBar;
    this.rvLeaderboard = rvLeaderboard;
    this.swipeRefresh = swipeRefresh;
    this.topBar = topBar;
    this.tvEmptyState = tvEmptyState;
    this.tvError = tvError;
    this.tvWelcome = tvWelcome;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLeaderboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLeaderboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_leaderboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLeaderboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adContainer;
      FrameLayout adContainer = ViewBindings.findChildViewById(rootView, id);
      if (adContainer == null) {
        break missingId;
      }

      id = R.id.adImageView;
      ImageView adImageView = ViewBindings.findChildViewById(rootView, id);
      if (adImageView == null) {
        break missingId;
      }

      id = R.id.adProgressBar;
      ProgressBar adProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (adProgressBar == null) {
        break missingId;
      }

      id = R.id.btnFetch;
      ImageButton btnFetch = ViewBindings.findChildViewById(rootView, id);
      if (btnFetch == null) {
        break missingId;
      }

      id = R.id.btnLeft;
      ImageButton btnLeft = ViewBindings.findChildViewById(rootView, id);
      if (btnLeft == null) {
        break missingId;
      }

      id = R.id.btnLoginLogout;
      MaterialButton btnLoginLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLoginLogout == null) {
        break missingId;
      }

      id = R.id.btnRetry;
      MaterialButton btnRetry = ViewBindings.findChildViewById(rootView, id);
      if (btnRetry == null) {
        break missingId;
      }

      id = R.id.errorLayout;
      LinearLayout errorLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rvLeaderboard;
      RecyclerView rvLeaderboard = ViewBindings.findChildViewById(rootView, id);
      if (rvLeaderboard == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.topBar;
      ConstraintLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.tvEmptyState;
      TextView tvEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyState == null) {
        break missingId;
      }

      id = R.id.tvError;
      TextView tvError = ViewBindings.findChildViewById(rootView, id);
      if (tvError == null) {
        break missingId;
      }

      id = R.id.tvWelcome;
      TextView tvWelcome = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcome == null) {
        break missingId;
      }

      return new ActivityLeaderboardBinding((LinearLayout) rootView, adContainer, adImageView,
          adProgressBar, btnFetch, btnLeft, btnLoginLogout, btnRetry, errorLayout, progressBar,
          rvLeaderboard, swipeRefresh, topBar, tvEmptyState, tvError, tvWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
